version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - DB_PATH=/app/data/safenode.db
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    networks:
      - safenode
    restart: unless-stopped
    depends_on:
      - awareness

  awareness:
    build:
      context: ./backend/awareness
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_PATH=/app/data/awareness.db
    volumes:
      - ./data:/app/data
      - ./backend/awareness/content:/app/content
    networks:
      - safenode
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_AWARENESS_URL=http://localhost:5000
    networks:
      - safenode
    restart: unless-stopped
    depends_on:
      - backend

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - safenode
    restart: unless-stopped
    depends_on:
      - frontend
      - backend

networks:
  safenode:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
